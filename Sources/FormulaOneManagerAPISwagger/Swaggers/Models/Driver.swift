//
// Driver.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Driver: Codable {

    public var _id: Int?
    public var lastName: String?
    public var firstName: String?
    public var value: Int?
    public var image: String?
    public var personDataId: Int?
    public var personData: PersonData?
    public var teamId: Int?
    public var isReserveDriver: Bool?
    public var raceNumber: Int?
    public var worldChampionships: Int?
    public var cornering: Int?
    public var braking: Int?
    public var reactions: Int?
    public var pace: Int?
    public var accuracy: Int?
    public var control: Int?
    public var smoothness: Int?
    public var consistency: Int?
    public var adaptability: Int?
    public var overtaking: Int?
    public var defendeing: Int?
    public var racecraft: Int?
    public var growthPotentialId: Int
    public var growthPotential: GrowthPotential?
    public var aggressionId: Int
    public var aggression: Aggression?
    public var rating: Int?

    public init(_id: Int? = nil, lastName: String? = nil, firstName: String? = nil, value: Int? = nil, image: String? = nil, personDataId: Int? = nil, personData: PersonData? = nil, teamId: Int? = nil, isReserveDriver: Bool? = nil, raceNumber: Int? = nil, worldChampionships: Int? = nil, cornering: Int? = nil, braking: Int? = nil, reactions: Int? = nil, pace: Int? = nil, accuracy: Int? = nil, control: Int? = nil, smoothness: Int? = nil, consistency: Int? = nil, adaptability: Int? = nil, overtaking: Int? = nil, defendeing: Int? = nil, racecraft: Int? = nil, growthPotentialId: Int, growthPotential: GrowthPotential? = nil, aggressionId: Int, aggression: Aggression? = nil, rating: Int? = nil) {
        self._id = _id
        self.lastName = lastName
        self.firstName = firstName
        self.value = value
        self.image = image
        self.personDataId = personDataId
        self.personData = personData
        self.teamId = teamId
        self.isReserveDriver = isReserveDriver
        self.raceNumber = raceNumber
        self.worldChampionships = worldChampionships
        self.cornering = cornering
        self.braking = braking
        self.reactions = reactions
        self.pace = pace
        self.accuracy = accuracy
        self.control = control
        self.smoothness = smoothness
        self.consistency = consistency
        self.adaptability = adaptability
        self.overtaking = overtaking
        self.defendeing = defendeing
        self.racecraft = racecraft
        self.growthPotentialId = growthPotentialId
        self.growthPotential = growthPotential
        self.aggressionId = aggressionId
        self.aggression = aggression
        self.rating = rating
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case lastName
        case firstName
        case value
        case image
        case personDataId
        case personData
        case teamId
        case isReserveDriver
        case raceNumber
        case worldChampionships
        case cornering
        case braking
        case reactions
        case pace
        case accuracy
        case control
        case smoothness
        case consistency
        case adaptability
        case overtaking
        case defendeing
        case racecraft
        case growthPotentialId
        case growthPotential
        case aggressionId
        case aggression
        case rating
    }

}
