//
// UpdateDriverDto.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct UpdateDriverDto: Codable {

    public var _id: Int
    public var firstName: String?
    public var lastName: String?
    public var teamId: Int?
    public var value: Int?
    public var image: String?
    public var personDataId: Int?
    public var raceNumber: Int?
    public var worldChampionships: Int?
    public var cornering: Int?
    public var braking: Int?
    public var reactions: Int?
    public var accuracy: Int?
    public var control: Int?
    public var smoothness: Int?
    public var adaptability: Int?
    public var overtaking: Int?
    public var defendeing: Int?
    public var aggressionId: Int?
    public var growthPotentialId: Int?
    public var isReserveDriver: Bool?

    public init(_id: Int, firstName: String? = nil, lastName: String? = nil, teamId: Int? = nil, value: Int? = nil, image: String? = nil, personDataId: Int? = nil, raceNumber: Int? = nil, worldChampionships: Int? = nil, cornering: Int? = nil, braking: Int? = nil, reactions: Int? = nil, accuracy: Int? = nil, control: Int? = nil, smoothness: Int? = nil, adaptability: Int? = nil, overtaking: Int? = nil, defendeing: Int? = nil, aggressionId: Int? = nil, growthPotentialId: Int? = nil, isReserveDriver: Bool? = nil) {
        self._id = _id
        self.firstName = firstName
        self.lastName = lastName
        self.teamId = teamId
        self.value = value
        self.image = image
        self.personDataId = personDataId
        self.raceNumber = raceNumber
        self.worldChampionships = worldChampionships
        self.cornering = cornering
        self.braking = braking
        self.reactions = reactions
        self.accuracy = accuracy
        self.control = control
        self.smoothness = smoothness
        self.adaptability = adaptability
        self.overtaking = overtaking
        self.defendeing = defendeing
        self.aggressionId = aggressionId
        self.growthPotentialId = growthPotentialId
        self.isReserveDriver = isReserveDriver
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case firstName
        case lastName
        case teamId
        case value
        case image
        case personDataId
        case raceNumber
        case worldChampionships
        case cornering
        case braking
        case reactions
        case accuracy
        case control
        case smoothness
        case adaptability
        case overtaking
        case defendeing
        case aggressionId
        case growthPotentialId
        case isReserveDriver
    }

}
